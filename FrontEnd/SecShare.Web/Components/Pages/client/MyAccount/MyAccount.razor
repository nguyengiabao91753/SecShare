@page "/myaccount"
@rendermode InteractiveServer

@inject NavigationManager Navigation

<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <div class="content-header">
        <div class="container-fluid">
            <div class="row mb-2">
                <div class="col-sm-6">
                    <div class="row file-header">
                        <button type="button" class="btn btn-lg btn-lg-square btn-outline-secondary m-2" @onclick="@(() => Navigation.NavigateTo("/"))">
                            <i class="fa fa-arrow-left"></i>
                        </button>
                        <h1 class="m-0">My Account</h1>
                    </div>
                </div>
                <div class="col-sm-6">
                    <ol class="breadcrumb float-sm-right">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item active">My Account</li>
                    </ol>
                </div>
            </div>
        </div>
    </div>

    <!-- Main content -->
    <div class="container mt-4">
        <div class="card shadow-sm p-4">
            <!-- Tabs -->
            <ul class="nav nav-tabs custom-tabs" id="accountTabs" role="tablist">
                <li class="nav-item">
                    <a class='nav-link @(activeTab == "personal" ? "active" : "")'
                       role='tab'
                       @onclick='() => SetActiveTab("personal")'>Thông tin cá nhân</a>
                </li>
                <li class="nav-item">
                    <a class='nav-link @(activeTab == "password" ? "active" : "")'
                       role='tab'
                       @onclick='() => SetActiveTab("password")'>Quản lý mật khẩu</a>
                </li>
            </ul>

            @if (showSuccess)
            {
                <div class="alert alert-success mt-3" role="alert">
                    @successMessage
                </div>
            }

            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger mt-3" role="alert">
                    @errorMessage
                </div>
            }

            <!-- Tab content -->
            <div class="tab-content mt-4" id="accountTabsContent">
                <!-- Tab 1: Thông tin cá nhân -->
                @if (activeTab == "personal")
                {
                    <div class="tab-pane fade show active" id="personal" role="tabpanel">
                        <EditForm Model="userModel" OnValidSubmit="HandleUpdate">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="row align-items-start">
                                <!-- Avatar -->
                                <div class="col-md-3 text-center">
                                    <div class="position-relative d-inline-block">
                                        <div class="rounded-circle d-flex justify-content-center align-items-center mx-auto shadow"
                                             style="width: 120px; height: 120px; background:#33cbd8; font-size:40px; font-weight:bold; color:#555; overflow:hidden; border:4px solid #fff;">
                                            <span>@(string.IsNullOrEmpty(userModel?.Name) ? "?" : userModel!.Name.Substring(0, 1).ToUpper())</span>
                                        </div>
                                    </div>
                                    <h5 class="mt-3 font-weight-bold">@userModel.Name</h5>
                                </div>

                                <!-- Info -->
                                <div class="col-md-9">
                                    <div class="mb-3">
                                        <label for="name" class="form-label">Tên người dùng</label>
                                        <InputText id="name" @bind-Value="userModel.Name" class="form-control" />
                                        <ValidationMessage For="@(() => userModel.Name)" />
                                    </div>

                                    <div class="mb-3">
                                        <label for="email" class="form-label">Email</label>
                                        <InputText id="email" @bind-Value="userModel.Email" class="form-control" readonly />
                                        <ValidationMessage For="@(() => userModel.Email)" />
                                    </div>

                                    <div class="mb-3">
                                        <label for="phone" class="form-label">Điện thoại</label>
                                        <InputText id="phone" @bind-Value="userModel.PhoneNumber" class="form-control" />
                                        <ValidationMessage For="@(() => userModel.PhoneNumber)" />
                                    </div>

                                    <div class="text-right mt-3">
                                        <button type="submit" class="btn btn-success px-4">Lưu</button>
                                    </div>
                                </div>
                            </div>
                        </EditForm>
                    </div>
                }
                else
                {
                    //Quản lý mật khẩu
                    <div class="tab-pane fade show active" id="password" role="tabpanel">
                        <EditForm EditContext="@editContext" OnValidSubmit="HandleChangePassword" FormName="ChangePassword">
                            <DataAnnotationsValidator />
                            <ValidationSummary />
                            <!-- Fake fields để "lừa" autofill -->
                            <input type="text" style="display:none" autocomplete="username" />
                            <input type="password" style="display:none" autocomplete="new-password" />

                            <!-- Mật khẩu hiện tại -->
                            <div class="form-group">
                                <label for="currentPassword">Mật khẩu hiện tại</label>
                                <div class="input-group">
                                    <InputText id="currentPassword"
                                               type="@(showPasswordOld ? "text" : "password")"
                                               @bind-Value="changePasswordModel.OldPassword"
                                               class="form-control"
                                               autocomplete="new-password" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-outline-secondary" @onclick="() => TogglePassword(nameof(changePasswordModel.OldPassword))">
                                            <i class="@(showPasswordOld ? "fas fa-eye-slash" : "fas fa-eye")"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Mật khẩu mới -->
                            <div class="form-group">
                                <label for="newPassword">Mật khẩu mới</label>
                                <div class="input-group">
                                    <InputText id="newPassword"
                                               type="@(showPasswordNew ? "text" : "password")"
                                               @bind-Value="changePasswordModel.NewPassword"
                                               class="form-control"
                                               autocomplete="new-password" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-outline-secondary" @onclick="() => TogglePassword(nameof(changePasswordModel.NewPassword))">
                                            <i class="@(showPasswordNew ? "fas fa-eye-slash" : "fas fa-eye")"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <!-- Xác nhận mật khẩu -->
                            <div class="form-group">
                                <label for="confirmPassword">Xác nhận mật khẩu</label>
                                <div class="input-group">
                                    <InputText id="confirmPassword"
                                               type="@(showPasswordConfirm ? "text" : "password")"
                                               @bind-Value="changePasswordModel.ConfirmPassword"
                                               class="form-control"
                                               autocomplete="new-password" />
                                    <div class="input-group-append">
                                        <button type="button" class="btn btn-outline-secondary" @onclick="() => TogglePassword(nameof(changePasswordModel.ConfirmPassword))">
                                            <i class="@(showPasswordConfirm ? "fas fa-eye-slash" : "fas fa-eye")"></i>
                                        </button>
                                    </div>
                                </div>
                            </div>

                            <div class="text-right mt-3">
                                <button type="button" class="btn btn-outline-secondary mr-2 px-4 rounded">Hủy</button>
                                <button type="submit" class="btn btn-success px-4 rounded">Lưu</button>
                            </div>
                        </EditForm>
                    </div>

                }
            </div>
        </div>
    </div>
</div>